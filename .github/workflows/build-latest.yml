name: Build Flarial dll (Debug)
on:
  push:
    branches: [ "main", "scripting-v2" ]
  pull_request:
    branches: [ "main", "scripting-v2" ]
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  windows-build:
    runs-on: windows-latest
    outputs:
      type: ${{ steps.type.outputs.status }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: "Check commit type"
        id: type
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"nightly:"* ]]; then
              echo "Continuing to build as nightly"
              echo "status=0" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.event.head_commit.message }}" == *"release:"* ]]; then
              echo "Continuing to build as release"
              echo "status=1" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.event.head_commit.message }}" == *"beta:"* ]]; then
              echo "Continuing to build as beta"
              echo "status=2" >> "$GITHUB_OUTPUT"
          else
              echo "Continuing to build anyway"
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up MSVC Environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: |
          #echo 'hi'
          
          cmake -S . -B build -G "Ninja" -DCMAKE_CXX_COMPILER=cl -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_STANDARD=23 -DCMAKE_BUILD_TYPE=Debug


      - name: Build DLL
        run: |
           cmake --build build
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.1
        with:
           name: Flarial_DLL
           path: D:\a\dll\dll\build\Flarial.dll
      - name: Upload a Build Artifact PDB
        uses: actions/upload-artifact@v4.6.1
        with:
           name: Flarial_PDB
           path: D:\a\dll\dll\build\Flarial.pdb
